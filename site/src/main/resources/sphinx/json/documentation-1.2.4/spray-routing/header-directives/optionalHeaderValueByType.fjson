{"body": "<div class=\"section\" id=\"optionalheadervaluebytype\">\n<span id=\"id1\"></span><h1>optionalHeaderValueByType</h1>\n<p>Optionally extracts the value of the HTTP request header of the given type.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">optionalHeaderValueByType</span><span class=\"o\">[</span><span class=\"kt\">T</span> <span class=\"k\">&lt;:</span> <span class=\"kt\">HttpHeader:</span> <span class=\"kt\">ClassTag</span><span class=\"o\">]()</span><span class=\"k\">:</span> <span class=\"kt\">Directive1</span><span class=\"o\">[</span><span class=\"kt\">Option</span><span class=\"o\">[</span><span class=\"kt\">T</span><span class=\"o\">]]</span>\n</pre></div>\n</div>\n<p>The signature shown is simplified, the real signature uses magnets. <a class=\"footnote-reference\" href=\"#id3\" id=\"id2\">[1]</a></p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id3\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[1]</a></td><td>See <a class=\"reference external\" href=\"/blog/2012-12-13-the-magnet-pattern/\">The Magnet Pattern</a> for an explanation of magnet-based overloading.</td></tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">optionalHeaderValueByType</span></tt> directive is similar to the <tt class=\"docutils literal\"><span class=\"pre\">headerValueByType</span></tt> directive but always extracts\nan <tt class=\"docutils literal\"><span class=\"pre\">Option</span></tt> value instead of rejecting the request if no matching header could be found.</p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">optionalHeaderValueByType</span><span class=\"o\">[</span><span class=\"kt\">Origin</span><span class=\"o\">]()</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"nc\">Some</span><span class=\"o\">(</span><span class=\"n\">origin</span><span class=\"o\">)</span> <span class=\"k\">\u21d2</span> <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"s\">&quot;The first origin was ${origin.originList.head}&quot;</span><span class=\"o\">)</span>\n    <span class=\"k\">case</span> <span class=\"nc\">None</span>         <span class=\"k\">\u21d2</span> <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;No Origin header found.&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">originHeader</span> <span class=\"k\">=</span> <span class=\"nc\">Origin</span><span class=\"o\">(</span><span class=\"nc\">Seq</span><span class=\"o\">(</span><span class=\"nc\">HttpOrigin</span><span class=\"o\">(</span><span class=\"s\">&quot;http://localhost:8080&quot;</span><span class=\"o\">)))</span>\n<span class=\"c1\">// extract Some(header) if the type is matching</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;abc&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">originHeader</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;The first origin was http://localhost:8080&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// extract None if no header of the given type is present</span>\n<span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;abc&quot;</span><span class=\"o\">)</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;No Origin header found.&quot;</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "optionalHeaderValueByType", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/header-directives/optionalHeaderValueByType", "next": {"link": "../optionalHeaderValuePF/", "title": "optionalHeaderValuePF"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/header-directives/optionalHeaderValuePF", "optionalHeaderValuePF", "N", "next"], ["documentation/spray-routing/header-directives/optionalHeaderValueByName", "optionalHeaderValueByName", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "HeaderDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">optionalHeaderValueByType</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../optionalHeaderValueByName/", "title": "optionalHeaderValueByName"}, "metatags": ""}