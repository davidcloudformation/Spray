{"body": "<div class=\"section\" id=\"withrangesupport\">\n<span id=\"id1\"></span><h1>withRangeSupport</h1>\n<p>Transforms the response from its inner route into a <tt class=\"docutils literal\"><span class=\"pre\">206</span> <span class=\"pre\">Partial</span> <span class=\"pre\">Content</span></tt>\nresponse if the client requested only part of the resource with a <tt class=\"docutils literal\"><span class=\"pre\">Range</span></tt> header.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">withRangeSupport</span><span class=\"o\">()</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span>\n<span class=\"k\">def</span> <span class=\"n\">withRangeSupport</span><span class=\"o\">(</span><span class=\"n\">rangeCountLimit</span><span class=\"k\">:</span> <span class=\"kt\">Int</span><span class=\"o\">,</span> <span class=\"n\">rangeCoalescingThreshold</span><span class=\"k\">:</span><span class=\"kt\">Long</span><span class=\"o\">)</span><span class=\"k\">:</span> <span class=\"kt\">Directive0</span>\n</pre></div>\n</div>\n<p>The signature shown is simplified, the real signature uses magnets. <a class=\"footnote-reference\" href=\"#id3\" id=\"id2\">[1]</a></p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id3\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[1]</a></td><td>See <a class=\"reference external\" href=\"/blog/2012-12-13-the-magnet-pattern/\">The Magnet Pattern</a> for an explanation of magnet-based overloading.</td></tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>Augments responses to <tt class=\"docutils literal\"><span class=\"pre\">GET</span></tt> requests with an <tt class=\"docutils literal\"><span class=\"pre\">Accept-Ranges:</span> <span class=\"pre\">bytes</span></tt> header and converts them into partial responses\nif the request contains a valid <tt class=\"docutils literal\"><span class=\"pre\">Range</span></tt> request header. The requested byte-ranges are coalesced (merged) if they\nlie closer together than the specified <tt class=\"docutils literal\"><span class=\"pre\">rangeCoalescingThreshold</span></tt> argument.</p>\n<p>In order to prevent the server from becoming overloaded with trying to prepare <tt class=\"docutils literal\"><span class=\"pre\">multipart/byteranges</span></tt> responses for\nhigh numbers of potentially very small ranges the directive rejects requests requesting more than <tt class=\"docutils literal\"><span class=\"pre\">rangeCountLimit</span></tt>\nranges with a <tt class=\"docutils literal\"><span class=\"pre\">TooManyRangesRejection</span></tt>.\nRequests with unsatisfiable ranges are rejected with an <tt class=\"docutils literal\"><span class=\"pre\">UnsatisfiableRangeRejection</span></tt>.</p>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">withRangeSupport()</span></tt> form (without parameters) uses the <tt class=\"docutils literal\"><span class=\"pre\">range-coalescing-threshold</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">range-count-limit</span></tt>\nsettings from the <tt class=\"docutils literal\"><span class=\"pre\">spray.routing</span></tt> configuration.</p>\n<p>This directive is transparent to non-<tt class=\"docutils literal\"><span class=\"pre\">GET</span></tt> requests.</p>\n<p>See also: <a class=\"reference external\" href=\"https://tools.ietf.org/html/draft-ietf-httpbis-p5-range/\">https://tools.ietf.org/html/draft-ietf-httpbis-p5-range/</a></p>\n</div>\n<div class=\"section\" id=\"example\">\n<h2>Example</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span>\n  <span class=\"n\">withRangeSupport</span><span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">2L</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">complete</span><span class=\"o\">(</span><span class=\"s\">&quot;ABCDEFGH&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"n\">addHeader</span><span class=\"o\">(</span><span class=\"nc\">Range</span><span class=\"o\">(</span><span class=\"nc\">ByteRange</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">)))</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">headers</span> <span class=\"n\">must</span> <span class=\"n\">contain</span><span class=\"o\">(</span><span class=\"n\">`Content-Range`</span><span class=\"o\">(</span><span class=\"nc\">ContentRange</span><span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">8</span><span class=\"o\">)))</span>\n  <span class=\"n\">status</span> <span class=\"o\">===</span> <span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">PartialContent</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"o\">===</span> <span class=\"s\">&quot;DE&quot;</span>\n<span class=\"o\">}</span>\n\n<span class=\"nc\">Get</span><span class=\"o\">()</span> <span class=\"o\">~&gt;</span> <span class=\"n\">addHeader</span><span class=\"o\">(</span><span class=\"nc\">Range</span><span class=\"o\">(</span><span class=\"nc\">ByteRange</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"nc\">ByteRange</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"nc\">ByteRange</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"mi\">7</span><span class=\"o\">)))</span> <span class=\"o\">~&gt;</span> <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n  <span class=\"n\">headers</span> <span class=\"n\">must</span> <span class=\"n\">not</span><span class=\"o\">(</span><span class=\"n\">contain</span><span class=\"o\">(</span><span class=\"n\">like</span><span class=\"o\">[</span><span class=\"kt\">HttpHeader</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"k\">case</span> <span class=\"n\">`Content-Range`</span><span class=\"o\">(</span><span class=\"k\">_</span><span class=\"o\">,</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"k\">\u21d2</span> <span class=\"n\">ok</span> <span class=\"o\">}))</span>\n  <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">MultipartByteRanges</span><span class=\"o\">]</span> <span class=\"n\">must</span> <span class=\"n\">beLike</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"nc\">MultipartByteRanges</span><span class=\"o\">(</span>\n      <span class=\"nc\">BodyPart</span><span class=\"o\">(</span><span class=\"n\">entity1</span><span class=\"o\">,</span> <span class=\"n\">`Content-Range`</span><span class=\"o\">(</span><span class=\"nc\">RangeUnit</span><span class=\"o\">.</span><span class=\"nc\">Bytes</span><span class=\"o\">,</span> <span class=\"n\">range1</span><span class=\"o\">)</span> <span class=\"o\">+:</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"o\">+:</span>\n      <span class=\"nc\">BodyPart</span><span class=\"o\">(</span><span class=\"n\">entity2</span><span class=\"o\">,</span> <span class=\"n\">`Content-Range`</span><span class=\"o\">(</span><span class=\"nc\">RangeUnit</span><span class=\"o\">.</span><span class=\"nc\">Bytes</span><span class=\"o\">,</span> <span class=\"n\">range2</span><span class=\"o\">)</span> <span class=\"o\">+:</span> <span class=\"k\">_</span><span class=\"o\">)</span> <span class=\"o\">+:</span> <span class=\"nc\">Seq</span><span class=\"o\">()</span>\n    <span class=\"o\">)</span> <span class=\"k\">\u21d2</span> <span class=\"n\">entity1</span><span class=\"o\">.</span><span class=\"n\">asString</span> <span class=\"o\">===</span> <span class=\"s\">&quot;ABC&quot;</span> <span class=\"n\">and</span> <span class=\"n\">range1</span> <span class=\"o\">===</span> <span class=\"nc\">ContentRange</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"n\">and</span>\n      <span class=\"n\">entity2</span><span class=\"o\">.</span><span class=\"n\">asString</span> <span class=\"o\">===</span> <span class=\"s\">&quot;GH&quot;</span> <span class=\"n\">and</span> <span class=\"n\">range2</span> <span class=\"o\">===</span> <span class=\"nc\">ContentRange</span><span class=\"o\">(</span><span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"mi\">7</span><span class=\"o\">,</span> <span class=\"mi\">8</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "withRangeSupport", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/range-directives/withRangeSupport", "next": {"link": "../../respond-with-directives/", "title": "RespondWithDirectives"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/respond-with-directives/index", "RespondWithDirectives", "N", "next"], ["documentation/spray-routing/range-directives/index", "RangeDirectives", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "RangeDirectives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">withRangeSupport</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "RangeDirectives"}, "metatags": ""}